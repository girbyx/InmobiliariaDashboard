// <auto-generated />
using System;
using InmobiliariaDashboard.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InmobiliariaDashboard.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201212035022_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CostId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GainId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LossId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("GainId");

                    b.HasIndex("LossId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressExt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cellphone")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("SuffixName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Zip")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Commission")
                        .HasColumnType("REAL");

                    b.Property<string>("CommissionType")
                        .HasColumnType("TEXT");

                    b.Property<int>("CostTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("MonetaryAgentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CostTypeId");

                    b.HasIndex("MonetaryAgentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.CostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CostTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressExt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cellphone")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Zip")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("GainTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonetaryAgentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("GainTypeId");

                    b.HasIndex("MonetaryAgentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Gains");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.GainType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GainTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Commission")
                        .HasColumnType("REAL");

                    b.Property<string>("CommissionType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("LossTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonetaryAgentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("LossTypeId");

                    b.HasIndex("MonetaryAgentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.LossType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LossTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.MonetaryAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccountNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CardNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MonetaryAgentType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("MonetaryAgents");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.ProjectHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OriginalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("OriginalId");

                    b.ToTable("ProjectsHistory");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Asset", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Enterprise", "Enterprise")
                        .WithMany("Assets")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Attachment", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Cost", "Cost")
                        .WithMany("Attachments")
                        .HasForeignKey("CostId");

                    b.HasOne("InmobiliariaDashboard.Server.Models.Gain", "Gain")
                        .WithMany("Attachments")
                        .HasForeignKey("GainId");

                    b.HasOne("InmobiliariaDashboard.Server.Models.Loss", "Loss")
                        .WithMany("Attachments")
                        .HasForeignKey("LossId");

                    b.Navigation("Cost");

                    b.Navigation("Gain");

                    b.Navigation("Loss");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Contact", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Enterprise", "Enterprise")
                        .WithMany("Contacts")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.CostType", "CostType")
                        .WithMany("Costs")
                        .HasForeignKey("CostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.MonetaryAgent", "MonetaryAgent")
                        .WithMany("Costs")
                        .HasForeignKey("MonetaryAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Costs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostType");

                    b.Navigation("MonetaryAgent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.GainType", "GainType")
                        .WithMany("Gains")
                        .HasForeignKey("GainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.MonetaryAgent", "MonetaryAgent")
                        .WithMany("Gains")
                        .HasForeignKey("MonetaryAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Gains")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GainType");

                    b.Navigation("MonetaryAgent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.LossType", "LossType")
                        .WithMany("Losses")
                        .HasForeignKey("LossTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.MonetaryAgent", "MonetaryAgent")
                        .WithMany("Losses")
                        .HasForeignKey("MonetaryAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Losses")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LossType");

                    b.Navigation("MonetaryAgent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.MonetaryAgent", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Enterprise", "Enterprise")
                        .WithMany("MonetaryAgents")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Enterprise", "Enterprise")
                        .WithMany("Projects")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.ProjectHistory", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Original")
                        .WithMany("History")
                        .HasForeignKey("OriginalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("Original");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.AssetType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.CostType", b =>
                {
                    b.Navigation("Costs");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Enterprise", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Contacts");

                    b.Navigation("MonetaryAgents");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.GainType", b =>
                {
                    b.Navigation("Gains");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.LossType", b =>
                {
                    b.Navigation("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.MonetaryAgent", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("History");

                    b.Navigation("Losses");
                });
#pragma warning restore 612, 618
        }
    }
}
