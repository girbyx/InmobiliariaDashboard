// <auto-generated />
using System;
using InmobiliariaDashboard.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InmobiliariaDashboard.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201203212606_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AccountCost", b =>
                {
                    b.Property<int>("AccountsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CostsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountsId", "CostsId");

                    b.HasIndex("CostsId");

                    b.ToTable("AccountCost");
                });

            modelBuilder.Entity("AccountGain", b =>
                {
                    b.Property<int>("AccountsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GainsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountsId", "GainsId");

                    b.HasIndex("GainsId");

                    b.ToTable("AccountGain");
                });

            modelBuilder.Entity("AccountLoss", b =>
                {
                    b.Property<int>("AccountsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LossesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountsId", "LossesId");

                    b.HasIndex("LossesId");

                    b.ToTable("AccountLoss");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CostId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GainId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LossId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("GainId");

                    b.HasIndex("LossId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone2")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SuffixName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone2")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Gains");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AccountCost", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Cost", null)
                        .WithMany()
                        .HasForeignKey("CostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountGain", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Gain", null)
                        .WithMany()
                        .HasForeignKey("GainsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountLoss", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Models.Loss", null)
                        .WithMany()
                        .HasForeignKey("LossesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Account", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Client", "Client")
                        .WithMany("Account")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Attachment", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Cost", "Cost")
                        .WithMany("Attachments")
                        .HasForeignKey("CostId");

                    b.HasOne("InmobiliariaDashboard.Server.Models.Gain", "Gain")
                        .WithMany("Attachments")
                        .HasForeignKey("GainId");

                    b.HasOne("InmobiliariaDashboard.Server.Models.Loss", "Loss")
                        .WithMany("Attachments")
                        .HasForeignKey("LossId");

                    b.Navigation("Cost");

                    b.Navigation("Gain");

                    b.Navigation("Loss");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Contact", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Client", "Client")
                        .WithMany("Contacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Costs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Gains")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Project", "Project")
                        .WithMany("Losses")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Client", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Contacts");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Cost", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Gain", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Loss", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Models.Project", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("Losses");
                });
#pragma warning restore 612, 618
        }
    }
}
