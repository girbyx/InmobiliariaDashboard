// <auto-generated />
using System;
using InmobiliariaDashboard.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InmobiliariaDashboard.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "system",
                            CreatedOn = new DateTime(2021, 1, 19, 20, 7, 7, 81, DateTimeKind.Local).AddTicks(5457),
                            Email = "admin@admin.com",
                            Password = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "system",
                            CreatedOn = new DateTime(2021, 1, 19, 20, 7, 7, 84, DateTimeKind.Local).AddTicks(9595),
                            Email = "marco.3292@gmail.com",
                            Password = "gorillaz1",
                            Username = "mdominguez"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "system",
                            CreatedOn = new DateTime(2021, 1, 19, 20, 7, 7, 84, DateTimeKind.Local).AddTicks(9716),
                            Email = "noe.gutierrez90@gmail.com",
                            Password = "guayas1",
                            Username = "ngutierrez"
                        });
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("PeopleId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CostId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtensionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GainId")
                        .HasColumnType("int");

                    b.Property<int?>("LossId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("GainId");

                    b.HasIndex("LossId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("CardNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonetaryAgentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<bool>("Prospect")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuffixName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<string>("CommissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CostTypeId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.CostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CostTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Gain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GainTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("GainTypeId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Gains");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.GainType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GainTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Loss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<string>("CommissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LossTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("LossTypeId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.LossType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LossTypes");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("ArchivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ArchivedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaximumSellingPrice")
                        .HasColumnType("float");

                    b.Property<double>("MinimumSellingPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectSubTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<bool>("Sold")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ProjectSubTypeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.ProjectHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaximumSellingPrice")
                        .HasColumnType("float");

                    b.Property<double>("MinimumSellingPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OriginalId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<bool>("Sold")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OriginalId");

                    b.HasIndex("PeopleId");

                    b.ToTable("ProjectsHistory");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.ProjectSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectSubType");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecurrentOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReminderFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Asset", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Assets")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("People");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Attachment", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.Cost", "Cost")
                        .WithMany("Attachments")
                        .HasForeignKey("CostId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Gain", "Gain")
                        .WithMany("Attachments")
                        .HasForeignKey("GainId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Loss", "Loss")
                        .WithMany("Attachments")
                        .HasForeignKey("LossId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Project", "Project")
                        .WithMany("Attachments")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Cost");

                    b.Navigation("Gain");

                    b.Navigation("Loss");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.BankAccount", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("MonetaryAgents")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Contact", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Contacts")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Cost", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.BankAccount", "BankAccount")
                        .WithMany("Costs")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.CostType", "CostType")
                        .WithMany("Costs")
                        .HasForeignKey("CostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Costs")
                        .HasForeignKey("PeopleId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Project", "Project")
                        .WithMany("Costs")
                        .HasForeignKey("ProjectId");

                    b.Navigation("BankAccount");

                    b.Navigation("CostType");

                    b.Navigation("People");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Gain", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.BankAccount", "BankAccount")
                        .WithMany("Gains")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.GainType", "GainType")
                        .WithMany("Gains")
                        .HasForeignKey("GainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Gains")
                        .HasForeignKey("PeopleId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Project", "Project")
                        .WithMany("Gains")
                        .HasForeignKey("ProjectId");

                    b.Navigation("BankAccount");

                    b.Navigation("GainType");

                    b.Navigation("People");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Loss", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.BankAccount", "BankAccount")
                        .WithMany("Losses")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.LossType", "LossType")
                        .WithMany("Losses")
                        .HasForeignKey("LossTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Losses")
                        .HasForeignKey("PeopleId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.Project", "Project")
                        .WithMany("Losses")
                        .HasForeignKey("ProjectId");

                    b.Navigation("BankAccount");

                    b.Navigation("LossType");

                    b.Navigation("People");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Project", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany("Projects")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InmobiliariaDashboard.Server.Entities.ProjectSubType", "ProjectSubType")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectSubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");

                    b.Navigation("ProjectSubType");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.ProjectHistory", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.Project", "Original")
                        .WithMany("History")
                        .HasForeignKey("OriginalId");

                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Original");

                    b.Navigation("People");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Reminder", b =>
                {
                    b.HasOne("InmobiliariaDashboard.Server.Entities.People", "People")
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.AssetType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.BankAccount", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Cost", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.CostType", b =>
                {
                    b.Navigation("Costs");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Gain", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.GainType", b =>
                {
                    b.Navigation("Gains");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Loss", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.LossType", b =>
                {
                    b.Navigation("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.People", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Contacts");

                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("Losses");

                    b.Navigation("MonetaryAgents");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.Project", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Costs");

                    b.Navigation("Gains");

                    b.Navigation("History");

                    b.Navigation("Losses");
                });

            modelBuilder.Entity("InmobiliariaDashboard.Server.Entities.ProjectSubType", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
